{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/sunil/ReactProjects/class69/WillyApp/screens/SearchScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport db from \"../config\";\n\nvar SearchScreen = function (_React$Component) {\n  _inherits(SearchScreen, _React$Component);\n\n  var _super = _createSuper(SearchScreen);\n\n  function SearchScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SearchScreen);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function _callee() {\n      var query;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").limit(10).get());\n\n            case 2:\n              query = _context.sent;\n              console.log();\n              query.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()])\n                });\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.searchTransactions = function _callee2(text) {\n      var enteredText, transaction, _transaction;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              enteredText = text.split(\"\");\n              text = text.toUpperCase();\n\n              if (!(enteredText[0].toUpperCase() === \"B\")) {\n                _context2.next = 9;\n                break;\n              }\n\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"bookId\", \"==\", text).get());\n\n            case 5:\n              transaction = _context2.sent;\n              transaction.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n              _context2.next = 14;\n              break;\n\n            case 9:\n              if (!(enteredText[0].toUpperCase() === \"S\")) {\n                _context2.next = 14;\n                break;\n              }\n\n              _context2.next = 12;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"studentId\", \"==\", text).get());\n\n            case 12:\n              _transaction = _context2.sent;\n\n              _transaction.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.fetchMoreTransactions = function _callee3() {\n      var text, enteredText, query, _query;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              text = _this.state.search.toUpperCase();\n              enteredText = text.split(\"\");\n\n              if (!(enteredText[0].toUpperCase() === \"B\")) {\n                _context3.next = 10;\n                break;\n              }\n\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"bookId\", \"==\", text));\n\n            case 5:\n              query = _context3.sent;\n              startAfter(_this.state.lastVisibleTransaction).limit(10).get();\n              query.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: [].concat(_toConsumableArray(allTransactions), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n              _context3.next = 15;\n              break;\n\n            case 10:\n              if (!(enteredText[0].toUpperCase() === \"S\")) {\n                _context3.next = 15;\n                break;\n              }\n\n              _context3.next = 13;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"studentId\", \"==\", text).startAfter(_this.state.lastVisibleTransaction).limit(10).get());\n\n            case 13:\n              _query = _context3.sent;\n\n              _query.docs.map(function (doc) {\n                _this.setState({\n                  allTransactions: [].concat(_toConsumableArray(allTransactions), [doc.data()]),\n                  lastVisibleTransaction: doc\n                });\n              });\n\n            case 15:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      allTransactions: [],\n      lastVisibleTransaction: null,\n      search: ''\n    };\n    return _this;\n  }\n\n  _createClass(SearchScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.searchBar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.bar,\n        placeholder: \"Enter BookId or StudentId\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            search: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.searchButton,\n        onPress: function onPress() {\n          _this2.searchTransactions(_this2.state.search);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, \"Search\"))), React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, \"Search Screen\"), React.createElement(FlatList, {\n        data: this.state.allTransactions,\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          return React.createElement(View, {\n            style: {\n              borderBottomWidth: 2\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }\n          }, \"Book Id: \" + item.bookId), React.createElement(Text, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 13\n            }\n          }, \"Student Id: \" + item.studentId), React.createElement(Text, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 13\n            }\n          }, \"Transaction Type: \" + item.transactionType));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          index.toString();\n        },\n        onEndReached: this.fetchMoreTransactions,\n        onEndReachedThreshold: 0.7,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return SearchScreen;\n}(React.Component);\n\nexport { SearchScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20\n  },\n  searchBar: {\n    flexDirection: 'row',\n    height: 40,\n    width: 'auto',\n    borderWidth: 0.5,\n    alignItems: 'center',\n    backgroundColor: 'grey'\n  },\n  bar: {\n    borderWidth: 2,\n    height: 30,\n    width: 300,\n    paddingLeft: 10\n  },\n  searchButton: {\n    borderWidth: 1,\n    height: 30,\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'green'\n  }\n});","map":{"version":3,"sources":["/home/sunil/ReactProjects/class69/WillyApp/screens/SearchScreen.js"],"names":["React","db","SearchScreen","props","componentDidMount","collection","limit","get","query","console","log","docs","map","doc","setState","allTransactions","state","data","searchTransactions","text","enteredText","split","toUpperCase","where","transaction","lastVisibleTransaction","fetchMoreTransactions","search","startAfter","styles","container","searchBar","bar","searchButton","item","borderBottomWidth","bookId","studentId","transactionType","index","toString","Component","StyleSheet","create","flex","marginTop","flexDirection","height","width","borderWidth","alignItems","backgroundColor","paddingLeft","justifyContent"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, View ,ScrollView, FlatList, TextInput, TouchableOpacity} from 'react-native';\nimport db from '../config'\n\nexport default class SearchScreen extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      allTransactions : [],\n      lastVisibleTransaction : null,\n      search : ''\n    }\n  }\n\n  componentDidMount = async()=>{\n    const query = await db.collection(\"transactions\").limit(10).get();\n    console.log();\n    query.docs.map((doc)=>{\n      this.setState({\n        // ... are called spread operator(for loop ) \n        allTransactions : [...this.state.allTransactions, doc.data()]\n        \n      })\n    })\n    /* Explanantion for Spread operator  ...\n    var arr  = [1,2, 3,4,5,6,7,8];\n    var arr1 = [...arr, 9]\n    console.log(arr1)\n    arr1 = [...arr1, 10]\n    console.log(arr1)\n    for(var i =0; i<arr.length(); i++){\n        arr1.push(arr)\n    }*/\n  }\n  \n  searchTransactions= async(text)=>{\n    var enteredText = text.split(\"\");\n    var text = text.toUpperCase();\n    if(enteredText[0].toUpperCase() === \"B\"  ){\n      const transaction = await db.collection(\"transactions\").where(\"bookId\",\"==\",text).get()\n      transaction.docs.map((doc)=>{\n        this.setState({\n          allTransactions : [...this.state.allTransactions, doc.data()],\n          lastVisibleTransaction : doc\n        })\n      })\n    }else if(enteredText[0].toUpperCase() === \"S\" ){\n      const transaction = await db.collection(\"transactions\").where(\"studentId\",\"==\",text).get()\n      transaction.docs.map((doc)=>{\n        this.setState({\n          allTransactions : [...this.state.allTransactions, doc.data()],\n          lastVisibleTransaction : doc\n        })\n      })\n    }\n  }\n\n  fetchMoreTransactions = async()=>{\n    var text = this.state.search.toUpperCase();\n    var enteredText = text.split(\"\");\n    \n    if(enteredText[0].toUpperCase() === \"B\"  ){\n      const query = await db.collection(\"transactions\").where(\"bookId\",\"==\",text)\n      startAfter(this.state.lastVisibleTransaction).limit(10).get()\n      query.docs.map((doc)=>{\n        this.setState({\n          allTransactions : [...allTransactions, doc.data()],\n          lastVisibleTransaction : doc\n        })\n      })\n    }else if(enteredText[0].toUpperCase() === \"S\" ){\n      const query = await db.collection(\"transactions\").where(\"studentId\",\"==\",text)\n      .startAfter(this.state.lastVisibleTransaction).limit(10).get()\n      query.docs.map((doc)=>{\n        this.setState({\n          allTransactions : [...allTransactions, doc.data()],\n          lastVisibleTransaction : doc\n        })\n      })\n    }\n  }\n\n  render(){\n    return (\n      <View style = {styles.container}>\n        <View style = {styles.searchBar}>\n          <TextInput \n            style = {styles.bar}\n            placeholder = \"Enter BookId or StudentId\"\n            onChangeText = {(text)=>{this.setState({\n              search : text\n            })}}\n          />\n          \n          <TouchableOpacity style = {styles.searchButton}\n            onPress = {()=>{\n              this.searchTransactions(this.state.search)\n            }}\n          >\n            <Text>Search</Text>\n          </TouchableOpacity>  \n          \n        </View>\n        <Text>Search Screen</Text> \n        <FlatList \n        data = {this.state.allTransactions}\n        renderItem = {({item})=>(\n          <View style={{borderBottomWidth:2}}>\n            <Text>{\"Book Id: \" +item.bookId}</Text>  \n            <Text>{\"Student Id: \" +item.studentId}</Text>\n            <Text>{\"Transaction Type: \" +item.transactionType}</Text>            \n          </View>\n        )}\n        keyExtractor = {(item , index)=>{index.toString()}}\n          onEndReached = {this.fetchMoreTransactions}\n          onEndReachedThreshold  = {0.7}\n        />      \n    </View>\n    );\n  }\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginTop: 20\n  },\n  searchBar:{\n    flexDirection:'row',\n    height:40,\n    width:'auto',\n    borderWidth:0.5,\n    alignItems:'center',\n    backgroundColor:'grey',\n\n  },\n  bar:{\n    borderWidth:2,\n    height:30,\n    width:300,\n    paddingLeft:10,\n  },\n  searchButton:{\n    borderWidth:1,\n    height:30,\n    width:50,\n    alignItems:'center',\n    justifyContent:'center',\n    backgroundColor:'green'\n  }\n})\n\n\n"]},"metadata":{},"sourceType":"module"}