{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/sunil/ReactProjects/class69/WillyApp/screens/BookTransactionScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport firebase from \"firebase\";\nimport db from \"../config\";\n\nvar BookTransaction = function (_React$Component) {\n  _inherits(BookTransaction, _React$Component);\n\n  var _super = _createSuper(BookTransaction);\n\n  function BookTransaction() {\n    var _this;\n\n    _classCallCheck(this, BookTransaction);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedBookId: data,\n                  buttonState: \"normal\"\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: \"normal\"\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookIssue = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'date': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': \"Issue\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                'bookAvailability': false\n              });\n              db.collection(\"student\").doc(_this.state.scannedStudentId).update({\n                'numberOfBookIssued': firebase.firestore.FieldValue.increment(1)\n              });\n\n              _this.setState({\n                scannedStudentId: '',\n                scannedBookId: ''\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookReturn = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'date': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': \"Return\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                'bookAvailability': true\n              });\n              db.collection(\"student\").doc(_this.state.scannedStudentId).update({\n                'numberOfBookIssued': firebase.firestore.FieldValue.increment(-1)\n              });\n\n              _this.setState({\n                scannedStudentId: '',\n                scannedBookId: ''\n              });\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityForBookIssue = function _callee5() {\n      var studentRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"student\").where(\"studentId\", \"==\", _this.state.scannedStudentId).get());\n\n            case 2:\n              studentRef = _context5.sent;\n              isStudentEligible = '';\n\n              if (studentRef.docs.length === 0) {\n                _this.setState({\n                  scannedStudentId: \"\",\n                  scannedBookId: \"\"\n                });\n\n                isStudentEligible = false;\n                Alert.alert(\"The student id doesn't exist in the database!\");\n              } else {\n                studentRef.docs.map(function (doc) {\n                  var student = doc.data();\n\n                  if (student.numberOfBookIssued < 2) {\n                    isStudentEligible = true;\n                  } else {\n                    isStudentEligible = false;\n                    Alert.alert(\"The student had already issued more than 2 books\");\n\n                    _this.setState({\n                      scannedStudentId: \"\",\n                      scannedBookId: \"\"\n                    });\n                  }\n                });\n              }\n\n              return _context5.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityForBookReturn = function _callee6() {\n      var transactionRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"bookId\", \"==\", _this.state.scannedBookId).limit(1).get());\n\n            case 2:\n              transactionRef = _context6.sent;\n              isStudentEligible = '';\n              transactionRef.docs.map(function (doc) {\n                var lastBookTransaction = doc.data();\n\n                if (lastBookTransaction.studentId.trim() === _this.state.scannedStudentId.trim()) {\n                  isStudentEligible = true;\n                } else {\n                  isStudentEligible = false;\n                  Alert.alert(\"The book wasn't issued by this student\");\n\n                  _this.setState({\n                    scannedStudentId: \"\",\n                    scannedBookId: \"\"\n                  });\n                }\n              });\n              return _context6.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkBookEligibility = function _callee7() {\n      var bookRef, transactionType;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"books\").where(\"bookId\", \"==\", _this.state.scannedBookId).get());\n\n            case 2:\n              bookRef = _context7.sent;\n              transactionType = '';\n\n              if (bookRef.docs.length === 0) {\n                transactionType = false;\n              } else {\n                bookRef.docs.map(function (doc) {\n                  var book = doc.data();\n\n                  if (book.bookAvailability) {\n                    transactionType = \"Issue\";\n                  } else {\n                    transactionType = \"Return\";\n                  }\n                });\n              }\n\n              return _context7.abrupt(\"return\", transactionType);\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee8() {\n      var transactionType, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _regeneratorRuntime.awrap(_this.checkBookEligibility());\n\n            case 2:\n              transactionType = _context8.sent;\n              console.log(transactionType);\n\n              if (transactionType) {\n                _context8.next = 9;\n                break;\n              }\n\n              Alert.alert(\"The book doesn't exist in the library database\");\n\n              _this.setState({\n                scannedStudentId: \"\",\n                scannedBookId: \"\"\n              });\n\n              _context8.next = 20;\n              break;\n\n            case 9:\n              if (!(transactionType === \"Issue\")) {\n                _context8.next = 16;\n                break;\n              }\n\n              _context8.next = 12;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookIssue());\n\n            case 12:\n              isStudentEligible = _context8.sent;\n\n              if (isStudentEligible) {\n                _this.initiateBookIssue();\n\n                Alert.alert(\"Book Issued\");\n              }\n\n              _context8.next = 20;\n              break;\n\n            case 16:\n              _context8.next = 18;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookReturn());\n\n            case 18:\n              isStudentEligible = _context8.sent;\n\n              if (isStudentEligible) {\n                _this.initiateBookReturn();\n\n                Alert.alert(\"Book Returned\");\n              }\n\n            case 20:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: \"normal\",\n      transactionMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(BookTransaction, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(\"**************************\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n      {\n        if (buttonState !== \"normal\" && hasCameraPermissions) {\n          return React.createElement(BarCodeScanner, {\n            onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 9\n            }\n          });\n        } else if (buttonState === \"normal\") {\n          return React.createElement(KeyboardAvoidingView, {\n            style: styles.container,\n            behavior: \"padding\",\n            enabled: true,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 9\n            }\n          }, React.createElement(View, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 11\n            }\n          }, React.createElement(Image, {\n            source: require(\"../assets/booklogo.jpg\"),\n            style: {\n              width: 200,\n              height: 200\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 13\n            }\n          }), React.createElement(Text, {\n            style: {\n              textAlign: \"center\",\n              fontSize: 30\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 13\n            }\n          }, \"Willy App\")), React.createElement(View, {\n            style: styles.inputView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 11\n            }\n          }, React.createElement(TextInput, {\n            style: styles.inputBox,\n            placeholder: \"BookId\",\n            value: this.state.scannedBookId,\n            onChangeText: function onChangeText(text) {\n              _this2.setState({\n                scannedBookId: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 13\n            }\n          }), React.createElement(TouchableOpacity, {\n            style: styles.scanButton,\n            onPress: function onPress() {\n              _this2.getCameraPermissions(\"BookId\");\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 13\n            }\n          }, React.createElement(Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }\n          }, \"Scan\"))), React.createElement(View, {\n            style: styles.inputView,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 11\n            }\n          }, React.createElement(TextInput, {\n            style: styles.inputBox,\n            placeholder: \"StudentId\",\n            value: this.state.scannedStudentId,\n            onChangeText: function onChangeText(text) {\n              _this2.setState({\n                scannedStudentId: text\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 11\n            }\n          }), React.createElement(TouchableOpacity, {\n            style: styles.scanButton,\n            onPress: function onPress() {\n              _this2.getCameraPermissions(\"StudentId\");\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 13\n            }\n          }, React.createElement(Text, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }\n          }, \"Scan\"))), React.createElement(Text, {\n            style: styles.transactionAlert,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 11\n            }\n          }, this.state.transactionMessage), React.createElement(TouchableOpacity, {\n            style: styles.submitButton,\n            onPress: function _callee9() {\n              return _regeneratorRuntime.async(function _callee9$(_context9) {\n                while (1) {\n                  switch (_context9.prev = _context9.next) {\n                    case 0:\n                      console.log(\"inside onPress\");\n                      _context9.next = 3;\n                      return _regeneratorRuntime.awrap(_this2.handleTransaction());\n\n                    case 3:\n                    case \"end\":\n                      return _context9.stop();\n                  }\n                }\n              }, null, null, null, Promise);\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            style: styles.submitButtonText,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 13\n            }\n          }, \"Submit\")));\n        }\n      }\n    }\n  }]);\n\n  return BookTransaction;\n}(React.Component);\n\nexport { BookTransaction as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  displayText: {\n    fontSize: 50,\n    textDecorationLine: \"underline\"\n  },\n  scanButton: {\n    backgroundColor: \"#A456B4\",\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  buttonText: {\n    fontSize: 20\n  },\n  inputView: {\n    flexDirection: \"row\",\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    fontSize: 20\n  },\n  submitButton: {\n    backgroundColor: \"#fbc02d\",\n    width: 100,\n    height: 50\n  },\n  submitButtonText: {\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  transactionAlert: {\n    fontSize: 20,\n    color: 'red'\n  }\n});","map":{"version":3,"sources":["/home/sunil/ReactProjects/class69/WillyApp/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","firebase","db","BookTransaction","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedBookId","scannedStudentId","initiateBookIssue","collection","add","firestore","Timestamp","now","toDate","doc","update","FieldValue","increment","initiateBookReturn","checkStudentEligibilityForBookIssue","where","get","studentRef","isStudentEligible","docs","length","Alert","alert","map","student","numberOfBookIssued","checkStudentEligibilityForBookReturn","limit","transactionRef","lastBookTransaction","studentId","trim","checkBookEligibility","bookRef","transactionType","book","bookAvailability","handleTransaction","console","log","transactionMessage","undefined","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","text","scanButton","transactionAlert","submitButton","submitButtonText","Component","StyleSheet","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","borderWidth","borderLeftWidth","buttonText","flexDirection","margin","padding","fontWeight","color"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, View ,TouchableOpacity, TextInput ,Image, KeyboardAvoidingView, Alert, ToastAndroid} from 'react-native';\nimport * as Permissions from \"expo-permissions\";\nimport {BarCodeScanner} from 'expo-barcode-scanner';\nimport firebase from \"firebase\";\nimport db from \"../config\";\n\nexport default class BookTransaction extends React.Component {\n\n  constructor (){\n    super();\n    this.state = {\n      hasCameraPermissions : null,\n      scanned  : false,\n      scannedBookId : '',\n      scannedStudentId : '',\n      buttonState : \"normal\",\n      transactionMessage : ''\n    }\n  }\n\n  getCameraPermissions=async(id)=>{\n    const {status} = await Permissions.askAsync(Permissions.CAMERA);\n    this.setState({\n      hasCameraPermissions : status === \"granted\",\n      buttonState : id,\n      scanned : false\n    })\n  }\n\n  handleBarCodeScanned = async({type,data})=>{\n    const {buttonState}= this.state\n    if(buttonState === \"BookId\"){\n      this.setState ({\n        scanned : true,\n        scannedBookId : data,\n        buttonState : \"normal\"\n      })\n    }else if(buttonState ===\"StudentId\"){\n      this.setState ({\n        scanned : true,\n        scannedStudentId : data,\n        buttonState : \"normal\"\n      })\n    }\n  }\n\n  initiateBookIssue = async ()=>{\n    //add a transaction\n    db.collection(\"transactions\").add({\n      'studentId' : this.state.scannedStudentId,\n      'bookId' : this.state.scannedBookId,\n      'date' : firebase.firestore.Timestamp.now().toDate(),\n      'transactionType' : \"Issue\"\n    })\n\n    //change book status\n    db.collection(\"books\").doc(this.state.scannedBookId).update({\n      'bookAvailability' : false\n    })\n    //change number of issued books for student\n    db.collection(\"student\").doc(this.state.scannedStudentId).update({\n      'numberOfBookIssued' : firebase.firestore.FieldValue.increment(1)\n    })\n\n    this.setState({\n      scannedStudentId : '',\n      scannedBookId: ''\n    })\n  }\n\n  initiateBookReturn = async ()=>{\n    //add a transaction\n    db.collection(\"transactions\").add({\n      'studentId' : this.state.scannedStudentId,\n      'bookId' : this.state.scannedBookId,\n      'date'   : firebase.firestore.Timestamp.now().toDate(),\n      'transactionType' : \"Return\"\n    })\n\n    //change book status\n    db.collection(\"books\").doc(this.state.scannedBookId).update({\n      'bookAvailability' : true\n    })\n\n    //change book status\n    db.collection(\"student\").doc(this.state.scannedStudentId).update({\n      'numberOfBookIssued' : firebase.firestore.FieldValue.increment(-1)\n    })\n\n    this.setState({\n      scannedStudentId : '',\n      scannedBookId : ''\n    })\n  }\n\n  checkStudentEligibilityForBookIssue = async ()  => {\n    const studentRef =  await db.collection(\"student\")\n    .where(\"studentId\",\"==\",this.state.scannedStudentId).get();\n    var isStudentEligible = '';\n    if(studentRef.docs.length === 0 ){\n      this.setState({\n        scannedStudentId: \"\",\n        scannedBookId: \"\"\n      });\n      isStudentEligible = false;\n      Alert.alert(\"The student id doesn't exist in the database!\");\n    }else{\n      studentRef.docs.map((doc)=>{\n        var student = doc.data();\n        if(student.numberOfBookIssued < 2 ){\n          isStudentEligible = true;\n        }else{\n          isStudentEligible = false;\n          Alert.alert(\"The student had already issued more than 2 books\");\n          this.setState({\n            scannedStudentId: \"\",\n            scannedBookId: \"\"\n          });\n        }\n      })\n    }\n    return isStudentEligible;\n  }\n\n  checkStudentEligibilityForBookReturn = async ()  => {\n    const transactionRef =  await db.collection(\"transactions\")\n    .where(\"bookId\",\"==\",this.state.scannedBookId)\n    .limit(1).get();\n    var isStudentEligible = '';\n    \n    transactionRef.docs.map((doc)=>{\n      var lastBookTransaction = doc.data();\n      if(lastBookTransaction.studentId.trim() === this.state.scannedStudentId.trim() ){\n        isStudentEligible = true;\n      }else{\n        isStudentEligible = false;\n        Alert.alert(\"The book wasn't issued by this student\");\n        this.setState({\n          scannedStudentId: \"\",\n          scannedBookId: \"\"\n        });\n      }\n    })\n    \n    return isStudentEligible;\n  }\n\n  checkBookEligibility = async ()  => {\n    const bookRef =  await db.collection(\"books\")\n    .where(\"bookId\",\"==\",this.state.scannedBookId).get();\n    var transactionType = '';\n    if(bookRef.docs.length === 0 ){      \n      transactionType = false;\n    }else{\n      bookRef.docs.map((doc)=>{\n        var book = doc.data();\n        if(book.bookAvailability){\n          transactionType = \"Issue\";\n        }else{\n          transactionType = \"Return\";\n        }\n      })\n    }\n    return transactionType;\n  }  \n\n  handleTransaction = async()=>{    \n    var transactionType =  await this.checkBookEligibility();\n    console.log(transactionType);\n    if(!transactionType){\n      Alert.alert(\"The book doesn't exist in the library database\");\n      this.setState({\n        scannedStudentId: \"\",\n        scannedBookId: \"\"\n      })\n    }else if(transactionType === \"Issue\"){\n      var isStudentEligible = await this.checkStudentEligibilityForBookIssue();\n      if(isStudentEligible){\n        this.initiateBookIssue();\n        Alert.alert(\"Book Issued\");\n      }\n    }else {\n      var isStudentEligible = await this.checkStudentEligibilityForBookReturn();\n      if(isStudentEligible){\n        this.initiateBookReturn();\n        Alert.alert(\"Book Returned\");\n      }\n    }  \n    \n  }\n\n  componentDidMount(){\n    console.log(\"**************************\");\n  }\n  render(){\n    const hasCameraPermissions = this.state.hasCameraPermissions;\n    const scanned = this.state.scanned;\n    const buttonState = this.state.buttonState;\n\n    {if(buttonState !== \"normal\" && hasCameraPermissions ){\n      return(\n        <BarCodeScanner onBarCodeScanned = {scanned?undefined : this.handleBarCodeScanned}/>\n      )\n    }else if(buttonState === \"normal\"){\n      return (\n        <KeyboardAvoidingView style = {styles.container} behavior = \"padding\" enabled>\n          <View>\n            <Image \n            source = {require(\"../assets/booklogo.jpg\")} style = {{width : 200, height : 200}}/>\n            <Text style = {{textAlign : \"center\",fontSize : 30}}>Willy App</Text>\n          </View>\n\n          <View style = {styles.inputView}>\n            <TextInput style = {styles.inputBox}\n            placeholder = \"BookId\"\n            value ={this.state.scannedBookId}\n            onChangeText = {(text)=>{\n              this.setState({\n                scannedBookId : text,\n              })\n            }}\n            \n            />\n            <TouchableOpacity style = {styles.scanButton} \n            onPress = {()=>{\n              this.getCameraPermissions(\"BookId\")\n            }}>\n              <Text>Scan</Text>\n          </TouchableOpacity>\n          </View>\n            \n          <View style = {styles.inputView}>\n          <TextInput style = {styles.inputBox}\n            placeholder = \"StudentId\"\n            value = {this.state.scannedStudentId}\n            onChangeText = {(text)=>{\n              this.setState({\n                scannedStudentId : text\n              })\n            }}\n            />\n            <TouchableOpacity style = {styles.scanButton} \n            onPress = {()=>{\n              this.getCameraPermissions(\"StudentId\")\n            }}>\n              <Text>Scan</Text>\n          </TouchableOpacity>\n          </View>\n          <Text style={styles.transactionAlert}>{this.state.transactionMessage}</Text>\n          <TouchableOpacity style = {styles.submitButton}\n          onPress = {async ()=>{\n            console.log(\"inside onPress\");\n             await this.handleTransaction()\n            }}>\n            <Text style = {styles.submitButtonText}>Submit</Text>\n          </TouchableOpacity>\n          \n        </KeyboardAvoidingView>\n      );\n    }\n  }\n  }\n  \n}\n\nconst styles = StyleSheet.create({\n  container :{\n    flex : 1,\n    justifyContent : \"center\",\n    alignItems : \"center\",\n    \n  },\n  displayText :{\n    fontSize : 50,\n    textDecorationLine : \"underline\",\n     \n  },\n  scanButton :{\n    backgroundColor : \"#A456B4\",\n    width : 50,\n    borderWidth : 1.5,\n    borderLeftWidth : 0\n  },\n   buttonText:{\n     fontSize : 20\n   },\n   inputView :{\n     flexDirection : \"row\",\n     margin : 20,\n   },\n   inputBox :{\n     width : 200,\n     height : 40,\n     borderWidth : 1.5,\n     fontSize : 20,\n\n   },\n   submitButton :{\n     backgroundColor : \"#fbc02d\",\n     width : 100,\n     height : 50,\n    \n   },\n   submitButtonText:{\n     padding : 10,\n     textAlign : \"center\",\n     fontSize : 20,\n     fontWeight : \"bold\",\n     color : \"white\"\n   },\n   transactionAlert:{\n    fontSize : 20,\n    color:'red'\n   }\n})\n\n"]},"metadata":{},"sourceType":"module"}