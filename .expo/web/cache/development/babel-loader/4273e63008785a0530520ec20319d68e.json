{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/sunil/ReactProjects/class69/WillyApp/screens/LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as firebase from 'firebase';\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n\n    _this.login = function _callee(emailId, password) {\n      var response;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(emailId + \"*****\" + password);\n\n              if (!(emailId && password)) {\n                _context.next = 23;\n                break;\n              }\n\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(firebase.auth().signInWithEmailAndPassword(emailId, password));\n\n            case 5:\n              response = _context.sent;\n              console.log(response);\n\n              if (response) {\n                _this.props.navigation.navigate(\"Transaction\");\n              }\n\n              _context.next = 21;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              _context.t1 = _context.t0.code;\n              _context.next = _context.t1 === 'auth/user-not-found' ? 15 : _context.t1 === 'auth/invalid-email' ? 18 : 21;\n              break;\n\n            case 15:\n              Alert.alert(\"user dosen't exists\");\n              console.log(\"user doesn't exist\");\n              return _context.abrupt(\"break\", 21);\n\n            case 18:\n              Alert.alert('incorrect email or password');\n              console.log('invaild');\n              return _context.abrupt(\"break\", 21);\n\n            case 21:\n              _context.next = 24;\n              break;\n\n            case 23:\n              Alert.alert('enter email and password');\n\n            case 24:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[2, 10]], Promise);\n    };\n\n    _this.state = {\n      emailId: \"\",\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: {\n          alignItems: 'center',\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/booklogo.jpg\"),\n        style: {\n          width: 200,\n          height: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, \"Willy App\")), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.loginBox,\n        placeholder: \"ABC@example.com\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            emailId: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.loginBox,\n        secureTextEntry: true,\n        placeholder: \"enter password\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          height: 30,\n          width: 90,\n          borderWidth: 1,\n          marginTop: 20,\n          paddingTop: 5,\n          borderRadius: 7\n        },\n        onPress: function onPress() {\n          _this2.login(_this2.state.emailId, _this2.state.password);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 22\n        }\n      }, \"Login\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  loginBox: {\n    width: 300,\n    height: 40,\n    borderWidth: 1.5,\n    fontSize: 20,\n    margin: 10,\n    paddingLeft: 10\n  }\n});","map":{"version":3,"sources":["/home/sunil/ReactProjects/class69/WillyApp/screens/LoginScreen.js"],"names":["React","firebase","LoginScreen","login","emailId","password","console","log","auth","signInWithEmailAndPassword","response","props","navigation","navigate","code","Alert","alert","state","alignItems","marginTop","require","width","height","textAlign","fontSize","styles","loginBox","text","setState","borderWidth","paddingTop","borderRadius","Component","StyleSheet","create","margin","paddingLeft"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, View ,TouchableOpacity, TextInput ,KeyboardAvoidingView, Image, Alert} from 'react-native';\nimport * as firebase from 'firebase'\n\nexport default class LoginScreen extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            emailId : \"\",\n            password : ''\n        }\n    }\n    login = async(emailId,password)=>{\n        console.log(emailId+\"*****\"+password);\n        if(emailId && password){\n            try{\n                \n                const response = await firebase.auth().signInWithEmailAndPassword(emailId,password)\n                console.log(response);\n                if(response){\n                    this.props.navigation.navigate(\"Transaction\")\n                }\n            }catch(error){\n                switch (error.code) {\n                    case 'auth/user-not-found':\n                      Alert.alert(\"user dosen't exists\")\n                      console.log(\"user doesn't exist\")\n                      break\n                    case 'auth/invalid-email':\n                      Alert.alert('incorrect email or password')\n                      console.log('invaild')\n                      break\n                  }\n\n            }\n\n        }else{\n            Alert.alert('enter email and password');\n        }\n    }\n\n    render(){\n        return(\n            <KeyboardAvoidingView  style = {{alignItems:'center',marginTop:20}}>\n                <View>                    \n                    <Image \n                    source = {require(\"../assets/booklogo.jpg\")}\n                    style = {{width : 200, height: 200}}\n                    />\n                    <Text style={{textAlign: 'center', fontSize: 30}}>Willy App</Text>\n                </View>\n                <View>\n                    <TextInput \n                    style = {styles.loginBox}\n                    placeholder = \"ABC@example.com\"\n                    keyboardType = \"email-address\"\n                    onChangeText = {(text)=>{   \n                        this.setState({\n                            emailId : text\n                        })\n                    }}\n                    />\n\n                    <TextInput \n                    style = {styles.loginBox}                    \n                    secureTextEntry = {true}\n                    placeholder = \"enter password\"\n                    onChangeText = {(text)=>{\n                        this.setState({\n                            password : text\n                        })\n                    }}\n                    />\n                </View>\n                <View>\n                    <TouchableOpacity \n                    style={{height:30,width:90,borderWidth:1,marginTop:20,paddingTop:5,borderRadius:7}}\n                    onPress = {()=>{\n                        this.login(this.state.emailId , this.state.password);\n                    }}>\n                     <Text style={{textAlign:'center'}}>Login</Text>\n                    </TouchableOpacity>\n                </View>\n            </KeyboardAvoidingView>\n                \n        )\n    }\n}\n\n\nconst styles = StyleSheet.create({\n    loginBox:\n    {\n      width: 300,\n    height: 40,\n    borderWidth: 1.5,\n    fontSize: 20,\n    margin:10,\n    paddingLeft:10\n    }\n  })"]},"metadata":{},"sourceType":"module"}