{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/sunil/ReactProjects/class69/WillyApp/screens/LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _super.call(this);\n\n    _this.login = function _callee(emailId, password) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      emailId: \"\",\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: {\n          alignItems: 'center',\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/booklogo.jpg\"),\n        style: {\n          width: 200,\n          height: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          textAlign: 'center',\n          fontSize: 30\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }\n      }, \"Willy App\")), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: styles.loginBox,\n        placeholder: \"ABC@example.com\",\n        keyboardType: \"email-address\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            emailId: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }\n      }), React.createElement(TextInput, {\n        style: styles.loginBox,\n        placeholder: \"enter password\",\n        securityTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            password: text\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: {\n          height: 30,\n          width: 90,\n          borderWidth: 1,\n          marginTop: 20,\n          paddingTop: 5,\n          borderRadius: 7\n        },\n        onPress: function onPress() {\n          _this2.login(_this2.state.emailId, _this2.state.password);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }\n      }, \"Login\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {}\n});","map":{"version":3,"sources":["/home/sunil/ReactProjects/class69/WillyApp/screens/LoginScreen.js"],"names":["React","LoginScreen","login","emailId","password","state","alignItems","marginTop","require","width","height","textAlign","fontSize","styles","loginBox","text","setState","borderWidth","paddingTop","borderRadius","Component","StyleSheet","create","container"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, View ,TouchableOpacity, TextInput ,KeyboardAvoidingView, Image} from 'react-native';\n\nexport default class LoginScreen extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            emailId : \"\",\n            password : ''\n        }\n    }\n    login = async(emailId,password)=>{\n\n    }\n    render(){\n        return(\n            <KeyboardAvoidingView  style = {{alignItems:'center',marginTop:20}}>\n                <View>                    \n                    <Image \n                    source = {require(\"../assets/booklogo.jpg\")}\n                    style = {{width : 200, height: 200}}\n                    />\n                    <Text style={{textAlign: 'center', fontSize: 30}}>Willy App</Text>\n                </View>\n                <View>\n                    <TextInput \n                    style = {styles.loginBox}\n                    placeholder = \"ABC@example.com\"\n                    keyboardType = \"email-address\"\n                    onChangeText = {(text)=>{   \n                        this.setState({\n                            emailId : text\n                        })\n                    }}\n                    />\n\n                    <TextInput \n                    style = {styles.loginBox}\n                    placeholder = \"enter password\"\n                    securityTextEntry = {true}\n                    onChangeText = {(text)=>{\n                        this.setState({\n                            password : text\n                        })\n                    }}\n                    />\n                </View>\n                <View>\n                    <TouchableOpacity \n                    style={{height:30,width:90,borderWidth:1,marginTop:20,paddingTop:5,borderRadius:7}}\n                    onPress = {()=>{\n                        this.login(this.state.emailId , this.state.password);\n                    }}>\n                     <Text style={{textAlign:'center'}}>Login</Text>\n                    </TouchableOpacity>\n                </View>\n            </KeyboardAvoidingView>\n                \n        )\n    }\n}\n\n\nconst styles = StyleSheet.create({\n    container :{\n\n    }\n})"]},"metadata":{},"sourceType":"module"}